Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                              build/util/out.o (__divmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o (exit)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                              build/adc/adc.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                              build/server/main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
                              build/adc/adc.o (__do_global_ctors)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_tablejump.o)
                              /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o) (__tablejump__)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
                              build/terminal/terminal.o (strncmp)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
                              build/terminal/terminal.o (strtok_r)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
                              build/server/main.o (fgetc)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                              build/server/main.o (__iob)

Allocating common symbols
Common symbol       size              file

adcValues           0x2               build/adc/adc.o
__iob               0x6               /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
LOAD build/server/main.o
LOAD build/uart/uart.o
LOAD build/adc/adc.o
LOAD build/terminal/terminal.o
LOAD build/util/pgmspace.o
LOAD build/util/out.o
LOAD build/servo/servo.o
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb50
 *(.vectors)
 .vectors       0x0000000000000000       0x68 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000068       0x3c build/adc/adc.o
                0x0000000000000068                terminal_command_name_adc
                0x000000000000006c                terminal_command_description_adc
                0x000000000000007f                terminal_command_definition_adc
                0x0000000000000087                terminal_command_name_adcfree
                0x000000000000008f                terminal_command_description_adcfree
                0x000000000000009c                terminal_command_definition_adcfree
 .progmem.data  0x00000000000000a4       0x2e build/terminal/terminal.o
                0x00000000000000a4                terminal_command_name_help
                0x00000000000000a9                terminal_command_description_help
                0x00000000000000ca                terminal_command_definition_help
                0x00000000000000d2                . = ALIGN (0x2)
                0x00000000000000d2                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000d2        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000d2                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000d2                __ctors_start = .
 *(.ctors)
 .ctors         0x00000000000000d2        0x6 build/adc/adc.o
 .ctors         0x00000000000000d8        0x2 build/terminal/terminal.o
 .ctors         0x00000000000000da        0x2 build/servo/servo.o
                0x00000000000000dc                __ctors_end = .
                0x00000000000000dc                __dtors_start = .
 *(.dtors)
                0x00000000000000dc                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000dc        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x00000000000000dc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000dc        0xc /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000e8       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
                0x00000000000000e8                __do_copy_data
 .init4         0x00000000000000fe       0x10 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
                0x00000000000000fe                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 .init6         0x000000000000010e       0x16 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
                0x000000000000010e                __do_global_ctors
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000124        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 *(.init9)
 *(.text)
 .text          0x000000000000012c        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
                0x000000000000012c                __vector_22
                0x000000000000012c                __vector_1
                0x000000000000012c                __vector_24
                0x000000000000012c                __vector_12
                0x000000000000012c                __bad_interrupt
                0x000000000000012c                __vector_6
                0x000000000000012c                __vector_3
                0x000000000000012c                __vector_23
                0x000000000000012c                __vector_25
                0x000000000000012c                __vector_13
                0x000000000000012c                __vector_17
                0x000000000000012c                __vector_7
                0x000000000000012c                __vector_5
                0x000000000000012c                __vector_4
                0x000000000000012c                __vector_9
                0x000000000000012c                __vector_2
                0x000000000000012c                __vector_15
                0x000000000000012c                __vector_8
                0x000000000000012c                __vector_14
                0x000000000000012c                __vector_10
                0x000000000000012c                __vector_16
 .text          0x0000000000000130       0xd8 build/server/main.o
                0x0000000000000130                __vector_11
                0x0000000000000144                mini
                0x0000000000000154                loop
                0x00000000000001aa                main
                0x00000000000001d0                getStringFromSerie
 .text          0x0000000000000208      0x1de build/uart/uart.o
                0x0000000000000208                __vector_18
                0x0000000000000260                __vector_19
                0x00000000000002b4                uart_disable_tx
                0x00000000000002bc                __vector_20
                0x00000000000002d0                uart_init
                0x0000000000000332                uart_getc
                0x000000000000036e                uart_putc
                0x00000000000003a4                uart_puts
                0x00000000000003c2                uart_puts_p
 .text          0x00000000000003e6      0x114 build/adc/adc.o
                0x00000000000003e6                __vector_21
                0x0000000000000482                adc_run
                0x0000000000000492                adc_init
                0x0000000000000494                terminal_command_init_adcfree
                0x000000000000049e                terminal_command_init_adc
                0x00000000000004a8                print_adc
                0x00000000000004d6                terminal_command_adcfree
                0x00000000000004f4                terminal_command_adc
 .text          0x00000000000004fa      0x3d8 build/terminal/terminal.o
                0x00000000000004fa                terminal_register
                0x000000000000051e                terminal_command_init_help
                0x0000000000000544                terminal_prompt
                0x000000000000054e                terminal_init
                0x0000000000000558                terminal_command_help
                0x0000000000000622                terminal_execute
                0x0000000000000776                terminal_process
                0x0000000000000820                terminal_tick
 .text          0x00000000000008d2       0x70 build/util/pgmspace.o
                0x00000000000008d2                pgm_read_object
                0x0000000000000904                pgm_read_string
 .text          0x0000000000000942       0x92 build/util/out.o
                0x0000000000000942                out_str
                0x0000000000000948                out_int
 .text          0x00000000000009d4       0x30 build/servo/servo.o
                0x00000000000009d4                servo_init
                0x00000000000009f2                servo_enable
                0x00000000000009f6                servo_disable
                0x00000000000009fa                servo_set_duty
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_tablejump.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
 .text          0x0000000000000a04        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                0x0000000000000a04                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000a04       0x26 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
                0x0000000000000a04                __divmodhi4
                0x0000000000000a04                _div
 .text.libgcc   0x0000000000000a2a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000a2a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000a2a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000a2a        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
 .text.libgcc   0x0000000000000a2a       0x28 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
                0x0000000000000a2a                __udivmodhi4
 .text.libgcc   0x0000000000000a52        0xc /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_tablejump.o)
                0x0000000000000a52                __tablejump2__
                0x0000000000000a56                __tablejump__
 .text.avr-libc
                0x0000000000000a5e       0x1c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
                0x0000000000000a5e                strncmp
 .text.avr-libc
                0x0000000000000a7a       0x4e /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
                0x0000000000000a7a                strtok_r
 .text.avr-libc
                0x0000000000000ac8       0x84 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
                0x0000000000000ac8                fgetc
                0x0000000000000b4c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b4c        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
                0x0000000000000b4c                exit
                0x0000000000000b4c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b4c        0x4 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b50                _etext = .

.data           0x0000000000800100       0x46 load address 0x0000000000000b50
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .data          0x0000000000800100        0x0 build/server/main.o
 .data          0x0000000000800100        0x0 build/uart/uart.o
 .data          0x0000000000800100        0xb build/adc/adc.o
 .data          0x000000000080010b       0x3a build/terminal/terminal.o
 .data          0x0000000000800145        0x0 build/util/pgmspace.o
 .data          0x0000000000800145        0x0 build/util/out.o
 .data          0x0000000000800145        0x0 build/servo/servo.o
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_tablejump.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
 .data          0x0000000000800145        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800146                . = ALIGN (0x2)
 *fill*         0x0000000000800145        0x1 00
                0x0000000000800146                _edata = .
                0x0000000000800146                PROVIDE (__data_end, .)

.bss            0x0000000000800146       0x97
                0x0000000000800146                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800146        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .bss           0x0000000000800146        0x4 build/server/main.o
                0x0000000000800146                counter
                0x0000000000800148                loop_counter
 .bss           0x000000000080014a       0x53 build/uart/uart.o
 .bss           0x000000000080019d        0x4 build/adc/adc.o
 .bss           0x00000000008001a1       0x34 build/terminal/terminal.o
 .bss           0x00000000008001d5        0x0 build/util/pgmspace.o
 .bss           0x00000000008001d5        0x0 build/util/out.o
 .bss           0x00000000008001d5        0x0 build/servo/servo.o
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_exit.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_copy_data.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_ctors.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/avr5/libgcc.a(_tablejump.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
 .bss           0x00000000008001d5        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00000000008001d5        0x2 build/adc/adc.o
                0x00000000008001d5                adcValues
 COMMON         0x00000000008001d7        0x6 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                0x00000000008001d7                __iob
                0x00000000008001dd                PROVIDE (__bss_end, .)
                0x0000000000000b50                __data_load_start = LOADADDR (.data)
                0x0000000000000b96                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001dd        0x0
                0x00000000008001dd                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001dd                PROVIDE (__noinit_end, .)
                0x00000000008001dd                _end = .
                0x00000000008001dd                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xec4
 *(.stab)
 .stab          0x0000000000000000      0x6b4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o
 .stab          0x00000000000006b4       0xc0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strncmp.o)
                                         0xcc (size before relaxing)
 .stab          0x0000000000000774      0x204 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(strtok_r.o)
                                        0x210 (size before relaxing)
 .stab          0x0000000000000978      0x420 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(fgetc.o)
                                        0x42c (size before relaxing)
 .stab          0x0000000000000d98      0x12c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/libc.a(iob.o)
                                        0x30c (size before relaxing)

.stabstr        0x0000000000000000      0x8ab
 *(.stabstr)
 .stabstr       0x0000000000000000      0x8ab /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr5/crtm328p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(build/flash elf32-avr)
LOAD linker stubs
